service: ${env:APP_NAME}
plugins:
  - serverless-offline
#  - serverless-dotenv-plugin
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  apiGateway:
    shouldStartNameWithService: true  
  # versionFunctions: true
  vpc:
    securityGroupIds: 
      - Fn::GetAtt: 
        - 'VPC'
        - 'DefaultSecurityGroup'
    subnetIds: 
      - Ref: 'PrivateSubnet1'
      - Ref: 'PrivateSubnet2'
  environment:
    HASURA_ADMIN_SECRET: ${env:HASURA_GRAPHQL_ADMIN_SECRET}
    DATABASE_USERNAME: ${env:DATABASE_USERNAME}
    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD}
    COGNITO_CLIENT_ID:
      Ref: UserPoolClient

package:
  individually: true
  exclude:
    #- '*'
    #- '**/*'

functions:
  #remote-schema:
  #  handler: lambdas/remote-schema/index.handler
  #  package:
  #    include:
  #      - lambdas/remote-schema/**
  #  events:
  #    - http:
  #        path: remote-schema
  #        method: post
  #        cors: true
  #    - http:
  #        path: remote-schema
  #        method: get
  #        cors: true
  actions:
    handler: lambdas/actions/index.handler
    events: 
      - http: 
          path: /
          method: ANY
          cors: true
      - http: 
          path: /{proxy+}
          method: ANY
          cors: true
  #event-triggers:
  #  handler: lambdas/event-triggers/index.handler
  #  package:
  #    include:
  #      - lambdas/event-triggers/**
  #  events:
  #    - http:
  #        path: event-triggers
  #        method: post
  #        cors: true
  #pre-token-generation:
  #  handler: functions/cognito-triggers/pre-token-generation.handler
  #  package:
  #    include:
  #      - functions/cognito-triggers/pre-token-generation.js
  #post-auth-trigger:
  #  handler: functions/cognito-triggers/post-auth-trigger.handler
  #  package:
  #    include:
  #      - functions/cognito-triggers/post-auth-trigger.js


custom:
  serverless-offline:
    #httpsProtocol: "dev-certs"
    httpPort: 8000
    #stageVariables:
     # foo: "bar"
  webpack:
    ebpackConfig: ./webpack.config.js
    includeModules: true
    packagerOptions:
      scripts: # this is the magic
        #- prisma generate
  # apigwBinary:
  #   types:
  #     - 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
  #     - '*/*'
      
#resources:
#  - ${file(resources/rds.yml)}

resources:
  #- ${file(resources/cognito.yml)}
  #- ${file(resources/vpc.yml)}
  #- ${file(resources/elb.yml)}
  #- ${file(resources/rds.yml)}
  #- ${file(resources/ecs.yml)}
  #- ${file(resources/cloudfront.yml)}
